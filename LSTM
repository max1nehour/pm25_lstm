{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1pZl1FM1z8a3wiyToCspT8JLP31uLUhhv",
      "authorship_tag": "ABX9TyOyEklYTrcGjN77a+B8Aplm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/max1nehour/Python_projects/blob/main/%E5%B0%91LSTM_daily_practice_.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cRUAGxZV2JcQ",
        "outputId": "5314e206-48ec-49ba-e13f-5022b3565ea3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            Date       area  Long_range_trans  Vehicle_exhaust  Coal_fired  \\\n",
            "0     2017-01-01    Banqiao          0.456520         4.401043    0.502707   \n",
            "1     2017-01-01     Chiayi          0.387843        22.131700    0.773481   \n",
            "2     2017-01-01     Douliu          1.657679        11.170355    1.552080   \n",
            "3     2017-01-01    Hualien          0.034066         3.683370    0.094480   \n",
            "4     2017-01-01   Xiaogang          2.605544        19.554745    1.393970   \n",
            "...          ...        ...               ...              ...         ...   \n",
            "1092  2019-12-23     Chiayi          0.381544        15.153218    0.575682   \n",
            "1093  2019-12-23     Douliu          0.520352         8.169237    2.453606   \n",
            "1094  2019-12-23    Hualien          0.071570         2.015280    0.121488   \n",
            "1095  2019-12-23   Xiaogang          2.663056         9.696881    0.401567   \n",
            "1096  2019-12-23  Zhongming          0.164308         3.985862    3.010674   \n",
            "\n",
            "      Road_dust  Soil_dust  Industrial_processes  Agricultural_activities  \\\n",
            "0      1.255795   0.356854              1.189513                 0.178427   \n",
            "1      6.891424   2.386361             12.056607                 1.332625   \n",
            "2      4.559221   5.941903             16.908981                 3.923649   \n",
            "3      0.670961   1.027567              0.139748                 0.514955   \n",
            "4      2.859353   2.757833             15.412781                 2.844326   \n",
            "...         ...        ...                   ...                      ...   \n",
            "1092   3.294619   1.348013             10.046945                 0.351860   \n",
            "1093   3.156579   6.213382              8.600318                 2.179219   \n",
            "1094   0.576137   0.805035              0.343986                 0.572777   \n",
            "1095   3.081306   2.668317             15.497811                 2.134653   \n",
            "1096   1.940062   1.949257              4.515831                 0.550849   \n",
            "\n",
            "      Sea_salt_spray  ...        As     Date_s1  N1_s1     P1_s1     dt  \\\n",
            "0           0.233365  ...  0.000490         NaN    NaN       NaN  20820   \n",
            "1           0.405771  ...  0.001303         NaN    NaN       NaN  20820   \n",
            "2           0.692221  ...  0.001035         NaN    NaN       NaN  20820   \n",
            "3           1.953852  ...  0.000655         NaN    NaN       NaN  20820   \n",
            "4           9.247669  ...  0.001167         NaN    NaN       NaN  20820   \n",
            "...              ...  ...       ...         ...    ...       ...    ...   \n",
            "1092        0.403047  ...  0.000722  2019-12-22  235.0  0.185478  21906   \n",
            "1093        0.380211  ...  0.000791  2019-12-22  284.0  0.247818  21906   \n",
            "1094        1.263816  ...  0.000190  2019-12-25  889.0  0.101461  21906   \n",
            "1095        9.298687  ...  0.000750  2019-12-22   93.0  0.105323  21906   \n",
            "1096        0.488509  ...  0.000509  2019-12-22  308.0  0.163136  21906   \n",
            "\n",
            "          Co_p   pm25  weekday  nxdt_pm25   M  \n",
            "0     0.000005   5.25   ¬P´Á¤é      17.79   1  \n",
            "1     0.000003  43.33   ¬P´Á¤é      61.17   1  \n",
            "2     0.000002  37.83   ¬P´Á¤é      49.42   1  \n",
            "3     0.000003  11.35   ¬P´Á¤é       8.91   1  \n",
            "4     0.000003  51.33   ¬P´Á¤é      68.25   1  \n",
            "...        ...    ...      ...        ...  ..  \n",
            "1092  0.000003  27.17   ¬P´Á¤@      28.54  12  \n",
            "1093  0.000005  21.50   ¬P´Á¤@      27.08  12  \n",
            "1094  0.000002   5.46   ¬P´Á¤@       6.83  12  \n",
            "1095  0.000009  33.38   ¬P´Á¤@      35.33  12  \n",
            "1096  0.000005  14.58   ¬P´Á¤@      21.25  12  \n",
            "\n",
            "[1097 rows x 87 columns]\n",
            "['drive/MyDrive/pm25/2020test.csv']\n",
            "         date area  pm25\n",
            "0     3/14/20   嘉義  18.0\n",
            "1     3/14/20   小港  25.0\n",
            "2     3/14/20   花蓮   8.0\n",
            "3     3/15/20   斗六  27.0\n",
            "4     3/15/20   嘉義  27.0\n",
            "...       ...  ...   ...\n",
            "2165  3/13/20   花蓮   9.0\n",
            "2166  3/13/20   小港  22.0\n",
            "2167  3/14/20   忠明  13.0\n",
            "2168  3/14/20   斗六  16.0\n",
            "2169  3/14/20   板橋  14.0\n",
            "\n",
            "[2170 rows x 3 columns]\n"
          ]
        }
      ],
      "source": [
        "# Import the libraries\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt  # for 畫圖用\n",
        "import matplotlib.dates as mdates\n",
        "import pandas as pd\n",
        "from glob import glob\n",
        "\n",
        "#列出檔名開頭pm25的檔案\n",
        "df_train = pd.read_csv('drive/MyDrive/pm25/pm2.5_data_3.csv',dtype={ 'Date': str, 'area':str})\n",
        "print(df_train)\n",
        "\n",
        "dataset_test = glob('drive/MyDrive/pm25/2020test.csv')\n",
        "print(dataset_test)\n",
        "\n",
        "#以列合併train data 僅讀取'Date','area','PM2_5_avg' 設定欄位資料型態'Date': str, 'area':str\n",
        "\n",
        "df_test = pd.concat(\n",
        "    (pd.read_csv(file, usecols=['date','area','pm25'], dtype={ 'Date': str, 'area':str}) for file in dataset_test ), ignore_index=True)\n",
        "\n",
        "#replace 'x' by 'nan'\n",
        "df_test['pm25'] = df_test['pm25'].replace('x','NaN')\n",
        "#datatype transform\n",
        "df_test['pm25'] = df_test['pm25'].astype(float)\n",
        "print(df_test)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import the training set 2019以前\n",
        "site = 'Banqiao'\n",
        "filt = (df_train['area'] == site)\n",
        "training_set = df_train.loc[filt, ['PM2_5']].values\n",
        "print(training_set, '\\n\\n')\n",
        "print(training_set.shape) #183\n",
        "# test set\n",
        "site2 = '板橋'\n",
        "filt2 = (df_test['area'] == site2)\n",
        "test_set = df_test.loc[filt2, ['pm25']].values\n",
        "print(test_set)\n",
        "print(test_set.shape) #360"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zJ9eV2P5bFvF",
        "outputId": "9948a0b7-b142-47d9-ffa2-49a245637609"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 5.25]\n",
            " [27.92]\n",
            " [ 9.54]\n",
            " [ 8.29]\n",
            " [11.29]\n",
            " [ 6.33]\n",
            " [31.33]\n",
            " [ 9.79]\n",
            " [ 5.83]\n",
            " [ 8.17]\n",
            " [28.75]\n",
            " [24.75]\n",
            " [12.08]\n",
            " [27.88]\n",
            " [29.12]\n",
            " [ 9.12]\n",
            " [34.29]\n",
            " [20.29]\n",
            " [28.42]\n",
            " [34.12]\n",
            " [23.58]\n",
            " [17.79]\n",
            " [16.25]\n",
            " [14.5 ]\n",
            " [16.38]\n",
            " [13.29]\n",
            " [24.  ]\n",
            " [ 9.83]\n",
            " [ 4.88]\n",
            " [ 9.58]\n",
            " [24.96]\n",
            " [ 5.62]\n",
            " [18.29]\n",
            " [15.25]\n",
            " [16.29]\n",
            " [15.  ]\n",
            " [11.92]\n",
            " [16.58]\n",
            " [ 9.33]\n",
            " [ 5.54]\n",
            " [12.71]\n",
            " [17.33]\n",
            " [16.58]\n",
            " [26.83]\n",
            " [14.75]\n",
            " [24.83]\n",
            " [ 9.17]\n",
            " [ 3.67]\n",
            " [ 8.54]\n",
            " [22.62]\n",
            " [21.67]\n",
            " [12.71]\n",
            " [16.17]\n",
            " [10.17]\n",
            " [ 5.92]\n",
            " [ 7.38]\n",
            " [ 7.83]\n",
            " [14.96]\n",
            " [ 6.54]\n",
            " [ 7.46]\n",
            " [14.62]\n",
            " [10.96]\n",
            " [ 8.  ]\n",
            " [ 7.54]\n",
            " [23.83]\n",
            " [ 6.04]\n",
            " [31.25]\n",
            " [20.38]\n",
            " [19.5 ]\n",
            " [36.96]\n",
            " [24.04]\n",
            " [65.96]\n",
            " [30.21]\n",
            " [27.21]\n",
            " [12.21]\n",
            " [24.79]\n",
            " [31.21]\n",
            " [18.38]\n",
            " [24.12]\n",
            " [16.04]\n",
            " [20.75]\n",
            " [25.5 ]\n",
            " [10.75]\n",
            " [27.62]\n",
            " [10.96]\n",
            " [16.08]\n",
            " [ 8.79]\n",
            " [ 8.75]\n",
            " [20.58]\n",
            " [ 4.38]\n",
            " [17.75]\n",
            " [ 8.92]\n",
            " [ 9.5 ]\n",
            " [ 6.38]\n",
            " [ 3.5 ]\n",
            " [16.5 ]\n",
            " [16.67]\n",
            " [12.79]\n",
            " [21.96]\n",
            " [12.46]\n",
            " [ 7.67]\n",
            " [ 8.04]\n",
            " [17.96]\n",
            " [ 6.79]\n",
            " [14.08]\n",
            " [ 9.42]\n",
            " [13.71]\n",
            " [19.71]\n",
            " [ 9.67]\n",
            " [10.21]\n",
            " [21.46]\n",
            " [16.17]\n",
            " [ 8.  ]\n",
            " [14.42]\n",
            " [17.42]\n",
            " [11.92]\n",
            " [17.08]\n",
            " [22.83]\n",
            " [ 3.75]\n",
            " [ 6.33]\n",
            " [14.92]\n",
            " [36.  ]\n",
            " [ 5.96]\n",
            " [ 8.29]\n",
            " [15.17]\n",
            " [14.04]\n",
            " [26.5 ]\n",
            " [ 9.71]\n",
            " [27.79]\n",
            " [ 9.29]\n",
            " [13.04]\n",
            " [24.54]\n",
            " [13.58]\n",
            " [14.62]\n",
            " [10.83]\n",
            " [13.75]\n",
            " [14.83]\n",
            " [27.08]\n",
            " [20.54]\n",
            " [30.46]\n",
            " [17.42]\n",
            " [14.5 ]\n",
            " [11.12]\n",
            " [12.33]\n",
            " [ 6.04]\n",
            " [17.25]\n",
            " [12.33]\n",
            " [17.12]\n",
            " [ 8.  ]\n",
            " [14.  ]\n",
            " [11.21]\n",
            " [11.62]\n",
            " [15.33]\n",
            " [11.33]\n",
            " [14.04]\n",
            " [15.75]\n",
            " [13.29]\n",
            " [12.83]\n",
            " [ 5.42]\n",
            " [ 5.04]\n",
            " [ 7.96]\n",
            " [15.71]\n",
            " [12.  ]\n",
            " [10.08]\n",
            " [ 9.04]\n",
            " [ 8.96]\n",
            " [ 5.67]\n",
            " [14.08]\n",
            " [12.12]\n",
            " [16.42]\n",
            " [21.92]\n",
            " [19.08]\n",
            " [15.75]\n",
            " [39.71]\n",
            " [18.54]\n",
            " [13.04]\n",
            " [30.92]\n",
            " [ 9.  ]\n",
            " [ 8.5 ]\n",
            " [ 9.96]\n",
            " [15.96]\n",
            " [22.62]\n",
            " [ 5.25]] \n",
            "\n",
            "\n",
            "(183, 1)\n",
            "[[18. ]\n",
            " [15. ]\n",
            " [22. ]\n",
            " [34. ]\n",
            " [31. ]\n",
            " [22. ]\n",
            " [28. ]\n",
            " [25. ]\n",
            " [20. ]\n",
            " [14. ]\n",
            " [23. ]\n",
            " [27. ]\n",
            " [25. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [17. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 6. ]\n",
            " [11. ]\n",
            " [17. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [32. ]\n",
            " [29. ]\n",
            " [16. ]\n",
            " [14. ]\n",
            " [18. ]\n",
            " [21. ]\n",
            " [12. ]\n",
            " [16. ]\n",
            " [17. ]\n",
            " [13. ]\n",
            " [11. ]\n",
            " [ 5. ]\n",
            " [18. ]\n",
            " [20. ]\n",
            " [19. ]\n",
            " [26. ]\n",
            " [34. ]\n",
            " [34. ]\n",
            " [28. ]\n",
            " [ 8. ]\n",
            " [ 3. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [30. ]\n",
            " [35. ]\n",
            " [20. ]\n",
            " [28. ]\n",
            " [35. ]\n",
            " [23. ]\n",
            " [20. ]\n",
            " [16. ]\n",
            " [ 7. ]\n",
            " [14. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [15. ]\n",
            " [19. ]\n",
            " [28. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [42. ]\n",
            " [26. ]\n",
            " [12. ]\n",
            " [25. ]\n",
            " [25. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [ 2. ]\n",
            " [ 5. ]\n",
            " [ 3. ]\n",
            " [20. ]\n",
            " [24. ]\n",
            " [ 6. ]\n",
            " [ 3. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 7. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [18. ]\n",
            " [18. ]\n",
            " [11. ]\n",
            " [18. ]\n",
            " [15. ]\n",
            " [20. ]\n",
            " [14. ]\n",
            " [16. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [26. ]\n",
            " [12. ]\n",
            " [ 9. ]\n",
            " [ 3. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [16. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [17. ]\n",
            " [19. ]\n",
            " [15. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 6. ]\n",
            " [ 9. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [13. ]\n",
            " [13. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [ 9. ]\n",
            " [ 5. ]\n",
            " [ 3. ]\n",
            " [ 5. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [13. ]\n",
            " [12. ]\n",
            " [13. ]\n",
            " [ 8. ]\n",
            " [13. ]\n",
            " [18. ]\n",
            " [17. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [16. ]\n",
            " [21. ]\n",
            " [31. ]\n",
            " [21. ]\n",
            " [24. ]\n",
            " [23. ]\n",
            " [12. ]\n",
            " [ 5. ]\n",
            " [ 4. ]\n",
            " [ 9. ]\n",
            " [14. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [ 4.7]\n",
            " [10.8]\n",
            " [ 6.8]\n",
            " [ 9.8]\n",
            " [ 9. ]\n",
            " [11.4]\n",
            " [ 8. ]\n",
            " [12.9]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [19. ]\n",
            " [ nan]\n",
            " [ nan]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 4. ]\n",
            " [ 8. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [11. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [11. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [11. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [ 2. ]\n",
            " [32. ]\n",
            " [29. ]\n",
            " [19. ]\n",
            " [17. ]\n",
            " [24. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [13. ]\n",
            " [ 9. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [14. ]\n",
            " [26. ]\n",
            " [25. ]\n",
            " [22. ]\n",
            " [13. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 6. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [11. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [13. ]\n",
            " [12. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [17. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [12. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [22. ]\n",
            " [26. ]\n",
            " [35. ]\n",
            " [26. ]\n",
            " [27. ]\n",
            " [28. ]\n",
            " [24. ]\n",
            " [18. ]\n",
            " [14. ]\n",
            " [ 4. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [14. ]\n",
            " [ 9. ]\n",
            " [13. ]\n",
            " [17. ]\n",
            " [23. ]\n",
            " [18. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [12. ]\n",
            " [14. ]\n",
            " [25. ]\n",
            " [11. ]\n",
            " [24. ]\n",
            " [10. ]\n",
            " [19. ]\n",
            " [17. ]\n",
            " [12. ]\n",
            " [14. ]]\n",
            "(360, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "做 Normalization，將資料壓縮在 [0,1] 之間"
      ],
      "metadata": {
        "id": "-x8v2hJI2Yg3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Feature Scaling\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "sc = MinMaxScaler(feature_range = (0, 1)) #控制最大值最小值範圍\n",
        "training_set_scaled = sc.fit_transform(training_set)#fit_transform: 先對partData作fit()的功能，找到該partData的整體統計特性之指標，如平均值、標準差、最大最小值等等(能依據不同目的套用這些指標在不同的轉換(即後面的transform()動作)上，再實行transform(partData)以對partData進行標準化\n",
        "print(training_set_scaled.shape)\n",
        "#training_set_scaled = training_set"
      ],
      "metadata": {
        "id": "APjY3Lap2Y22",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "267d8765-3135-4ef9-ffde-a2066f8b4407"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(183, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "準備進入訓練的資料格式：設定 Timestep 設為 60 ，代表過去 60 天的資訊，嘗試過數值設置太少，將使 RNN 無法學習。"
      ],
      "metadata": {
        "id": "U6czb7VR2ebe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = []\n",
        "y_train = []\n",
        "for i in range(1, 183):  # 訓練集總數\n",
        "    X_train.append(training_set_scaled[i-1:i, 0])\n",
        "    y_train.append(training_set_scaled[i, 0])\n",
        "X_train, y_train = np.array(X_train), np.array(y_train)  # 轉成numpy array的格式，以利輸入 RNN"
      ],
      "metadata": {
        "id": "qmWe8lgZ2gYH"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Reshape\n",
        "因為現在 X_train 是 2-dimension，將它 reshape 成 3-dimension: [stock prices, timesteps, indicators]"
      ],
      "metadata": {
        "id": "zsF7SLpB2j5C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1))"
      ],
      "metadata": {
        "id": "63JW5quZ2ld3"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#搭建一個 LSTM"
      ],
      "metadata": {
        "id": "xsdM-s92K55d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import the Keras libraries and packages\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import Dropout\n",
        "\n",
        "# Initialising the RNN\n",
        "regressor = Sequential()"
      ],
      "metadata": {
        "id": "248Rpc6mK8aS"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "搭建 LSTM layer\n",
        "\n",
        "units: 神經元的數目\n",
        "\n",
        "第一層的 LSTM Layer 記得要設定input_shape參數\n",
        "\n",
        "搭配使用dropout，這裡設為 0.2\n",
        "\n",
        "由於這邊的第四層 LSTM Layer 即將跟 Ouput Layer 做連接，因此注意這邊的 return_sequences 設為預設值 False （也就是不用寫上 return_sequences）"
      ],
      "metadata": {
        "id": "4CAUOC_3LQUr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Adding the first LSTM layer and some Dropout regularisation\n",
        "regressor.add(LSTM(units = 50, return_sequences = True, input_shape = (X_train.shape[1], 1)))\n",
        "regressor.add(Dropout(0.2))\n",
        "\n",
        "# Adding a second LSTM layer and some Dropout regularisation\n",
        "regressor.add(LSTM(units = 50, return_sequences = True))\n",
        "regressor.add(Dropout(0.2))\n",
        "\n",
        "# Adding a third LSTM layer and some Dropout regularisation\n",
        "regressor.add(LSTM(units = 50, return_sequences = True))\n",
        "regressor.add(Dropout(0.2))\n",
        "\n",
        "# Adding a fourth LSTM layer and some Dropout regularisation\n",
        "regressor.add(LSTM(units = 50))\n",
        "regressor.add(Dropout(0.2))"
      ],
      "metadata": {
        "id": "WHs47WxvLKCH"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Adding the output layer\n",
        "regressor.add(Dense(units = 1))"
      ],
      "metadata": {
        "id": "TGyx7AiWLfh2"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Compiling & Fitting LSTM model\n",
        "\n",
        "optimizer: 選擇 Adam\n",
        "\n",
        "loss: 使用 MSE"
      ],
      "metadata": {
        "id": "Li8VCw-6LdYI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Compiling\n",
        "import tensorflow as tf\n",
        "from keras import optimizers\n",
        "from keras import metrics\n",
        "regressor.compile(optimizer = 'adam', loss = 'mean_squared_error', metrics=[metrics.mae, metrics.sparse_top_k_categorical_accuracy]) #adam is good at time series data\n",
        "print(X_train.shape)\n",
        "# 進行訓練\n",
        "history = regressor.fit(X_train, y_train, epochs = 100, batch_size = 32, validation_split=0.2)\n",
        "# val_loss 驗證集損失: 比訓練集損失小，是一個好的表現\n",
        "# Val_accuracy 驗證集準確率\n",
        "# val_accuracy 衡量模型在未見過的數據上的預測準確性"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lctrPljRLsC6",
        "outputId": "e86a1179-d6dc-43f9-ffa1-83c6942ff2f3"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(182, 1, 1)\n",
            "Epoch 1/100\n",
            "5/5 [==============================] - 20s 663ms/step - loss: 0.0592 - mean_absolute_error: 0.1971 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0336 - val_mean_absolute_error: 0.1476 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 2/100\n",
            "5/5 [==============================] - 0s 35ms/step - loss: 0.0527 - mean_absolute_error: 0.1806 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0283 - val_mean_absolute_error: 0.1300 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 3/100\n",
            "5/5 [==============================] - 0s 44ms/step - loss: 0.0459 - mean_absolute_error: 0.1628 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0231 - val_mean_absolute_error: 0.1127 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 4/100\n",
            "5/5 [==============================] - 0s 41ms/step - loss: 0.0390 - mean_absolute_error: 0.1447 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0182 - val_mean_absolute_error: 0.0936 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 5/100\n",
            "5/5 [==============================] - 0s 36ms/step - loss: 0.0324 - mean_absolute_error: 0.1286 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0141 - val_mean_absolute_error: 0.0795 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 6/100\n",
            "5/5 [==============================] - 0s 37ms/step - loss: 0.0256 - mean_absolute_error: 0.1147 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0118 - val_mean_absolute_error: 0.0735 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 7/100\n",
            "5/5 [==============================] - 0s 37ms/step - loss: 0.0217 - mean_absolute_error: 0.1091 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0837 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 8/100\n",
            "5/5 [==============================] - 0s 38ms/step - loss: 0.0211 - mean_absolute_error: 0.1127 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0157 - val_mean_absolute_error: 0.1025 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 9/100\n",
            "5/5 [==============================] - 0s 33ms/step - loss: 0.0220 - mean_absolute_error: 0.1184 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0153 - val_mean_absolute_error: 0.1003 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 10/100\n",
            "5/5 [==============================] - 0s 33ms/step - loss: 0.0207 - mean_absolute_error: 0.1119 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0139 - val_mean_absolute_error: 0.0921 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 11/100\n",
            "5/5 [==============================] - 0s 34ms/step - loss: 0.0204 - mean_absolute_error: 0.1105 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0845 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 12/100\n",
            "5/5 [==============================] - 0s 40ms/step - loss: 0.0203 - mean_absolute_error: 0.1086 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0816 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 13/100\n",
            "5/5 [==============================] - 0s 34ms/step - loss: 0.0200 - mean_absolute_error: 0.1072 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0814 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 14/100\n",
            "5/5 [==============================] - 0s 36ms/step - loss: 0.0202 - mean_absolute_error: 0.1077 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0829 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 15/100\n",
            "5/5 [==============================] - 0s 36ms/step - loss: 0.0201 - mean_absolute_error: 0.1079 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0130 - val_mean_absolute_error: 0.0859 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 16/100\n",
            "5/5 [==============================] - 0s 34ms/step - loss: 0.0205 - mean_absolute_error: 0.1101 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0135 - val_mean_absolute_error: 0.0894 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 17/100\n",
            "5/5 [==============================] - 0s 36ms/step - loss: 0.0207 - mean_absolute_error: 0.1109 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0132 - val_mean_absolute_error: 0.0873 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 18/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0206 - mean_absolute_error: 0.1098 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0130 - val_mean_absolute_error: 0.0854 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 19/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0204 - mean_absolute_error: 0.1102 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0852 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 20/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0206 - mean_absolute_error: 0.1097 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0848 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 21/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0201 - mean_absolute_error: 0.1095 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0852 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 22/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0205 - mean_absolute_error: 0.1092 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0849 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 23/100\n",
            "5/5 [==============================] - 0s 18ms/step - loss: 0.0201 - mean_absolute_error: 0.1086 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0840 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 24/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0203 - mean_absolute_error: 0.1101 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0844 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 25/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0208 - mean_absolute_error: 0.1098 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0834 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 26/100\n",
            "5/5 [==============================] - 0s 20ms/step - loss: 0.0202 - mean_absolute_error: 0.1085 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0827 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 27/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0201 - mean_absolute_error: 0.1076 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0820 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 28/100\n",
            "5/5 [==============================] - 0s 18ms/step - loss: 0.0203 - mean_absolute_error: 0.1086 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0825 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 29/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0210 - mean_absolute_error: 0.1113 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0840 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 30/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0208 - mean_absolute_error: 0.1101 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0846 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 31/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0202 - mean_absolute_error: 0.1083 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0840 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 32/100\n",
            "5/5 [==============================] - 0s 30ms/step - loss: 0.0203 - mean_absolute_error: 0.1081 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0823 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 33/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0197 - mean_absolute_error: 0.1051 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0836 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 34/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0200 - mean_absolute_error: 0.1075 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0837 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 35/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0203 - mean_absolute_error: 0.1084 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0839 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 36/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0198 - mean_absolute_error: 0.1082 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0839 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 37/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0200 - mean_absolute_error: 0.1084 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0840 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 38/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0198 - mean_absolute_error: 0.1080 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0847 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 39/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0195 - mean_absolute_error: 0.1076 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0834 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 40/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0200 - mean_absolute_error: 0.1092 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0836 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 41/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0198 - mean_absolute_error: 0.1065 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0131 - val_mean_absolute_error: 0.0857 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 42/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0205 - mean_absolute_error: 0.1092 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0130 - val_mean_absolute_error: 0.0853 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 43/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0203 - mean_absolute_error: 0.1084 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0812 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 44/100\n",
            "5/5 [==============================] - 0s 27ms/step - loss: 0.0205 - mean_absolute_error: 0.1081 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0812 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 45/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0197 - mean_absolute_error: 0.1072 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0130 - val_mean_absolute_error: 0.0852 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 46/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0192 - mean_absolute_error: 0.1056 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0136 - val_mean_absolute_error: 0.0899 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 47/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0204 - mean_absolute_error: 0.1102 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0133 - val_mean_absolute_error: 0.0873 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 48/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0198 - mean_absolute_error: 0.1092 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0131 - val_mean_absolute_error: 0.0860 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 49/100\n",
            "5/5 [==============================] - 0s 27ms/step - loss: 0.0203 - mean_absolute_error: 0.1097 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0826 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 50/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0208 - mean_absolute_error: 0.1087 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0807 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 51/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0202 - mean_absolute_error: 0.1079 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0807 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 52/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0199 - mean_absolute_error: 0.1064 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0807 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 53/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0210 - mean_absolute_error: 0.1108 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0129 - val_mean_absolute_error: 0.0848 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 54/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0199 - mean_absolute_error: 0.1093 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0130 - val_mean_absolute_error: 0.0854 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 55/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0197 - mean_absolute_error: 0.1085 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0825 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 56/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0204 - mean_absolute_error: 0.1089 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0807 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 57/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0205 - mean_absolute_error: 0.1079 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0803 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 58/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0196 - mean_absolute_error: 0.1064 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0830 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 59/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0201 - mean_absolute_error: 0.1087 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0843 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 60/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0200 - mean_absolute_error: 0.1075 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0824 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 61/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0193 - mean_absolute_error: 0.1054 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0814 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 62/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0202 - mean_absolute_error: 0.1082 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0805 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 63/100\n",
            "5/5 [==============================] - 0s 21ms/step - loss: 0.0205 - mean_absolute_error: 0.1086 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0814 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 64/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0198 - mean_absolute_error: 0.1068 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0818 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 65/100\n",
            "5/5 [==============================] - 0s 21ms/step - loss: 0.0205 - mean_absolute_error: 0.1095 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0819 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 66/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0197 - mean_absolute_error: 0.1056 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0122 - val_mean_absolute_error: 0.0799 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 67/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0200 - mean_absolute_error: 0.1070 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0122 - val_mean_absolute_error: 0.0801 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 68/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0194 - mean_absolute_error: 0.1067 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0810 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 69/100\n",
            "5/5 [==============================] - 0s 21ms/step - loss: 0.0203 - mean_absolute_error: 0.1081 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0825 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 70/100\n",
            "5/5 [==============================] - 0s 18ms/step - loss: 0.0197 - mean_absolute_error: 0.1075 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0808 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 71/100\n",
            "5/5 [==============================] - 0s 21ms/step - loss: 0.0200 - mean_absolute_error: 0.1048 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0121 - val_mean_absolute_error: 0.0789 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 72/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0196 - mean_absolute_error: 0.1050 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0121 - val_mean_absolute_error: 0.0796 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 73/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0200 - mean_absolute_error: 0.1072 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0835 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 74/100\n",
            "5/5 [==============================] - 0s 23ms/step - loss: 0.0203 - mean_absolute_error: 0.1083 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0844 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 75/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0196 - mean_absolute_error: 0.1074 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0832 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 76/100\n",
            "5/5 [==============================] - 0s 31ms/step - loss: 0.0200 - mean_absolute_error: 0.1085 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0846 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 77/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0200 - mean_absolute_error: 0.1073 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0814 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 78/100\n",
            "5/5 [==============================] - 0s 30ms/step - loss: 0.0195 - mean_absolute_error: 0.1066 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0121 - val_mean_absolute_error: 0.0791 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 79/100\n",
            "5/5 [==============================] - 0s 28ms/step - loss: 0.0201 - mean_absolute_error: 0.1067 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0823 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 80/100\n",
            "5/5 [==============================] - 0s 26ms/step - loss: 0.0205 - mean_absolute_error: 0.1102 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0841 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 81/100\n",
            "5/5 [==============================] - 0s 25ms/step - loss: 0.0202 - mean_absolute_error: 0.1077 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0819 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 82/100\n",
            "5/5 [==============================] - 0s 20ms/step - loss: 0.0201 - mean_absolute_error: 0.1082 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0827 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 83/100\n",
            "5/5 [==============================] - 0s 20ms/step - loss: 0.0196 - mean_absolute_error: 0.1058 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0819 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 84/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0209 - mean_absolute_error: 0.1090 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0807 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 85/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0199 - mean_absolute_error: 0.1058 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0812 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 86/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0198 - mean_absolute_error: 0.1067 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0829 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 87/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0199 - mean_absolute_error: 0.1085 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0828 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 88/100\n",
            "5/5 [==============================] - 0s 20ms/step - loss: 0.0202 - mean_absolute_error: 0.1093 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0808 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 89/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0200 - mean_absolute_error: 0.1051 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0805 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 90/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0187 - mean_absolute_error: 0.1041 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0123 - val_mean_absolute_error: 0.0810 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 91/100\n",
            "5/5 [==============================] - 0s 24ms/step - loss: 0.0197 - mean_absolute_error: 0.1074 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0828 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 92/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0198 - mean_absolute_error: 0.1066 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0833 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 93/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0199 - mean_absolute_error: 0.1071 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0131 - val_mean_absolute_error: 0.0868 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 94/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0198 - mean_absolute_error: 0.1090 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0128 - val_mean_absolute_error: 0.0844 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 95/100\n",
            "5/5 [==============================] - 0s 18ms/step - loss: 0.0206 - mean_absolute_error: 0.1099 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0124 - val_mean_absolute_error: 0.0816 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 96/100\n",
            "5/5 [==============================] - 0s 19ms/step - loss: 0.0206 - mean_absolute_error: 0.1075 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0121 - val_mean_absolute_error: 0.0793 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 97/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0197 - mean_absolute_error: 0.1061 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0830 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 98/100\n",
            "5/5 [==============================] - 0s 21ms/step - loss: 0.0196 - mean_absolute_error: 0.1074 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0127 - val_mean_absolute_error: 0.0836 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 99/100\n",
            "5/5 [==============================] - 0s 18ms/step - loss: 0.0199 - mean_absolute_error: 0.1074 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0126 - val_mean_absolute_error: 0.0828 - val_sparse_top_k_categorical_accuracy: 1.0000\n",
            "Epoch 100/100\n",
            "5/5 [==============================] - 0s 22ms/step - loss: 0.0198 - mean_absolute_error: 0.1075 - sparse_top_k_categorical_accuracy: 0.9931 - val_loss: 0.0125 - val_mean_absolute_error: 0.0821 - val_sparse_top_k_categorical_accuracy: 1.0000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib import pyplot\n",
        "pyplot.plot(history.history['loss'])\n",
        "pyplot.plot(history.history['val_loss'])\n",
        "pyplot.title('model train vs validation loss')\n",
        "pyplot.ylabel('loss')\n",
        "pyplot.xlabel('epoch')\n",
        "pyplot.legend(['train', 'validation'], loc='upper right')\n",
        "pyplot.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "4dn-B2SXpcOA",
        "outputId": "4380abd8-f682-48a8-88db-2f93ab805443"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 進行預測"
      ],
      "metadata": {
        "id": "6UngBlUsL1DV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#取測試 2020的pm2.5\n",
        "real_pm25 = test_set\n",
        "print(real_pm25.shape) #360\n",
        "print(real_pm25)"
      ],
      "metadata": {
        "id": "d2WJLiZAL7a4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3ffaca94-26f3-45ea-c6da-0749ed0d8fc0"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(360, 1)\n",
            "[[18. ]\n",
            " [15. ]\n",
            " [22. ]\n",
            " [34. ]\n",
            " [31. ]\n",
            " [22. ]\n",
            " [28. ]\n",
            " [25. ]\n",
            " [20. ]\n",
            " [14. ]\n",
            " [23. ]\n",
            " [27. ]\n",
            " [25. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [17. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 6. ]\n",
            " [11. ]\n",
            " [17. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [32. ]\n",
            " [29. ]\n",
            " [16. ]\n",
            " [14. ]\n",
            " [18. ]\n",
            " [21. ]\n",
            " [12. ]\n",
            " [16. ]\n",
            " [17. ]\n",
            " [13. ]\n",
            " [11. ]\n",
            " [ 5. ]\n",
            " [18. ]\n",
            " [20. ]\n",
            " [19. ]\n",
            " [26. ]\n",
            " [34. ]\n",
            " [34. ]\n",
            " [28. ]\n",
            " [ 8. ]\n",
            " [ 3. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [30. ]\n",
            " [35. ]\n",
            " [20. ]\n",
            " [28. ]\n",
            " [35. ]\n",
            " [23. ]\n",
            " [20. ]\n",
            " [16. ]\n",
            " [ 7. ]\n",
            " [14. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [15. ]\n",
            " [19. ]\n",
            " [28. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [42. ]\n",
            " [26. ]\n",
            " [12. ]\n",
            " [25. ]\n",
            " [25. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [ 2. ]\n",
            " [ 5. ]\n",
            " [ 3. ]\n",
            " [20. ]\n",
            " [24. ]\n",
            " [ 6. ]\n",
            " [ 3. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 7. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [18. ]\n",
            " [18. ]\n",
            " [11. ]\n",
            " [18. ]\n",
            " [15. ]\n",
            " [20. ]\n",
            " [14. ]\n",
            " [16. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [26. ]\n",
            " [12. ]\n",
            " [ 9. ]\n",
            " [ 3. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [16. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [17. ]\n",
            " [19. ]\n",
            " [15. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 6. ]\n",
            " [ 9. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [13. ]\n",
            " [13. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [ 9. ]\n",
            " [ 5. ]\n",
            " [ 3. ]\n",
            " [ 5. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 4. ]\n",
            " [ 4. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [13. ]\n",
            " [12. ]\n",
            " [13. ]\n",
            " [ 8. ]\n",
            " [13. ]\n",
            " [18. ]\n",
            " [17. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [16. ]\n",
            " [21. ]\n",
            " [31. ]\n",
            " [21. ]\n",
            " [24. ]\n",
            " [23. ]\n",
            " [12. ]\n",
            " [ 5. ]\n",
            " [ 4. ]\n",
            " [ 9. ]\n",
            " [14. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [ 4.7]\n",
            " [10.8]\n",
            " [ 6.8]\n",
            " [ 9.8]\n",
            " [ 9. ]\n",
            " [11.4]\n",
            " [ 8. ]\n",
            " [12.9]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [12. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [19. ]\n",
            " [ nan]\n",
            " [ nan]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 4. ]\n",
            " [ 8. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [11. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [11. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [11. ]\n",
            " [10. ]\n",
            " [ 9. ]\n",
            " [11. ]\n",
            " [12. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 4. ]\n",
            " [ 3. ]\n",
            " [ 2. ]\n",
            " [32. ]\n",
            " [29. ]\n",
            " [19. ]\n",
            " [17. ]\n",
            " [24. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [13. ]\n",
            " [ 9. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [14. ]\n",
            " [26. ]\n",
            " [25. ]\n",
            " [22. ]\n",
            " [13. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [12. ]\n",
            " [11. ]\n",
            " [ 6. ]\n",
            " [ 6. ]\n",
            " [ 5. ]\n",
            " [ 7. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 5. ]\n",
            " [ 5. ]\n",
            " [11. ]\n",
            " [14. ]\n",
            " [ 6. ]\n",
            " [ 7. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [ 6. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [13. ]\n",
            " [12. ]\n",
            " [ 6. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 8. ]\n",
            " [ 8. ]\n",
            " [ 7. ]\n",
            " [ 8. ]\n",
            " [ 9. ]\n",
            " [ 8. ]\n",
            " [10. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [17. ]\n",
            " [11. ]\n",
            " [11. ]\n",
            " [12. ]\n",
            " [15. ]\n",
            " [14. ]\n",
            " [21. ]\n",
            " [14. ]\n",
            " [22. ]\n",
            " [26. ]\n",
            " [35. ]\n",
            " [26. ]\n",
            " [27. ]\n",
            " [28. ]\n",
            " [24. ]\n",
            " [18. ]\n",
            " [14. ]\n",
            " [ 4. ]\n",
            " [13. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [14. ]\n",
            " [ 9. ]\n",
            " [13. ]\n",
            " [17. ]\n",
            " [23. ]\n",
            " [18. ]\n",
            " [10. ]\n",
            " [10. ]\n",
            " [ 7. ]\n",
            " [12. ]\n",
            " [14. ]\n",
            " [25. ]\n",
            " [11. ]\n",
            " [24. ]\n",
            " [10. ]\n",
            " [19. ]\n",
            " [17. ]\n",
            " [12. ]\n",
            " [14. ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset_total = pd.concat((df_train['PM2_5'], df_test['pm25']), axis = 0)\n",
        "inputs = dataset_total[len(dataset_total) - len(df_test) - 1:].values\n",
        "inputs = inputs.reshape(-1,1)\n",
        "inputs = sc.transform(inputs) # Feature Scaling\n",
        "\n",
        "X_test = []\n",
        "for i in range(1,543): # timesteps一樣60； 81 = 20+61\n",
        "    X_test.append(inputs[i- 1:i, 0])\n",
        "X_test = np.array(X_test)\n",
        "X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))  # Reshape 成 3-dimension"
      ],
      "metadata": {
        "id": "Gq00P6ByL_5j"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#進行預測\n",
        "predicted_pm25 = regressor.predict(X_test)\n",
        "predicted_pm25 = sc.inverse_transform(predicted_pm25)  # to get the original scale"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IkxvJJBwMG_L",
        "outputId": "282d8bc5-afab-433d-d685-1592bd2f533b"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "17/17 [==============================] - 2s 3ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#x = df_test['Date']\n",
        "plt.plot(real_pm25, color = 'red', label = 'Real PM2.5')  # 紅線表示真實股價\n",
        "plt.plot(predicted_pm25, color = 'blue', label = 'Predicted PM2.5')  # 藍線表示預測股價\n",
        "plt.title('PM2.5 Daily Prediction')\n",
        "plt.xlabel('Time')\n",
        "plt.ylabel('PM2.5')\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "rOsjC4zyMG9t",
        "outputId": "5454e60f-ad5d-4583-cbed-961fb82a33be"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_squared_error, mean_absolute_error\n",
        "print(real_pm25.shape)\n",
        "print(predicted_pm25.shape)\n",
        "\n",
        "real = pd.DataFrame(real_pm25)\n",
        "predict = pd.DataFrame(predicted_pm25)\n",
        "\n",
        "real.fillna(real.mean(), inplace=True)\n",
        "predict.fillna(predict.mean(), inplace=True)\n",
        "\n",
        "rmse = np.sqrt(mean_squared_error(real, predict[0:360]))\n",
        "mae = mean_absolute_error(real, predict[0:360])\n",
        "\n",
        "print(\"RMSE:\", rmse)\n",
        "print(\"MAE:\", mae)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zNkBejdNcFfR",
        "outputId": "24b99070-4769-402b-c733-bfa86c0e0085"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(360, 1)\n",
            "(542, 1)\n",
            "RMSE: 8.633298154703326\n",
            "MAE: 7.556236240021714\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(real_pm25, predicted_pm25[0:360])\n",
        "plt.xlabel('Real PM2.5')\n",
        "plt.ylabel('Predicted PM2.5')\n",
        "plt.title('Scatter Plot of Real vs Predicted PM2.5')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "VfTUzddEc5qK",
        "outputId": "368a96bb-50ac-4e68-8e5f-9d01f4127ce0"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
